#!/bin/sh

if [ -e "irdata-config" ]; then
    . 'irdata-config'
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" == '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME ( --all | <source>... )

Check data from the different sources. These are configured to be the
following when --all is specified:

$XMLSOURCES
EOF
    exit 1
fi

SOURCES=$*

if [ "$SOURCES" == '--all' ]; then
    SOURCES=$XMLSOURCES
elif [ ! "$SOURCES" ]; then
    echo "$PROGNAME: No sources specified." 1>&2
    exit 1
fi

STATUS=0

for SOURCE in $SOURCES; do
    eval SOURCEDIR='$'"$SOURCE"_DIR_NAME
    eval FILEPATTERN='$'"$SOURCE"_XML_FILE_PATTERN

    # Check for improper source names which don't map to directories.

    if [ ! "$SOURCEDIR" ]; then
        echo "$PROGNAME: $SOURCE is not a valid source name." 1>&2
        STATUS=1
        continue
    fi

    # Check for absent file-matching patterns.

    if [ ! "$FILEPATTERN" ]; then
        echo "$PROGNAME: $SOURCE does not provide XML files." 1>&2
        continue
    fi

    DATADIR="$DATA/$SOURCEDIR"

    # Check for the source's data directory.

    if [ ! -e "$DATADIR" ]; then
        echo "$PROGNAME: Source $SOURCE provides no data directory." 1>&2
        STATUS=1
        continue
    fi

    XMLFILES="$DATADIR/$FILEPATTERN"

    for XMLFILE in $XMLFILES; do

        # Where the pattern did not expand, expect the pattern as a file.

        if [ "$XMLFILE" == "$XMLFILES" ]; then
            echo "$PROGNAME: Source $SOURCE does not appear to provide files." 1>&2
            STATUS=1
            break
        fi

        # Test for the file and run xmllint.

        if [ ! -e "$XMLFILE" ] || ! xmllint "$XMLFILE" > /dev/null 2>&1 ; then
            echo "$PROGNAME: File $XMLFILE in source $SOURCE failed." 1>&2
            STATUS=1
        fi
    done

    if [ $STATUS == 0 ]; then
        echo "$PROGNAME: Source $SOURCE checked successfully." 1>&2
        echo $SOURCE
    else
        echo "$PROGNAME: Source $SOURCE had errors." 1>&2
    fi
done

exit $STATUS
